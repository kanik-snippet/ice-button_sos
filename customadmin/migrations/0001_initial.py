# Generated by Django 4.2.17 on 2024-12-19 13:14

import ckeditor.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expiry_date', models.DateTimeField(blank=True, help_text='The date when the current plan expires.', null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'ordering': ['username'],
            },
        ),
        migrations.CreateModel(
            name='FAQHeading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description for the FAQ heading.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='standard', max_length=50, unique=True)),
                ('max_emails', models.PositiveIntegerField(default=5)),
                ('max_phone_numbers', models.PositiveIntegerField(default=5)),
                ('max_button', models.PositiveIntegerField(default=1)),
                ('subscription_type', models.CharField(choices=[('monthly', 'Monthly'), ('yearly', 'Yearly')], default='monthly', max_length=10)),
                ('stream', models.BooleanField(default=True)),
                ('stream_length', models.DurationField(default=datetime.timedelta(seconds=90))),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaticContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the content.', max_length=255, unique=True)),
                ('slug', models.SlugField(help_text="Unique identifier for the content (e.g., 'terms-and-conditions').", max_length=255, unique=True)),
                ('body', ckeditor.fields.RichTextField(help_text='The content to display, supports rich text formatting.')),
                ('meta_title', models.CharField(blank=True, help_text='Optional meta title for SEO. Defaults to the title.', max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, help_text='Optional meta description for SEO.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time the content was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time the content was last updated.')),
            ],
            options={
                'verbose_name': 'Static Content',
                'verbose_name_plural': 'Static Contents',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('admin_role', models.CharField(default='admin', max_length=50)),
            ],
            options={
                'db_table': 'admin_table',
            },
            bases=('customadmin.baseuser',),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('user_type', models.CharField(default='user', max_length=50)),
            ],
            options={
                'db_table': 'user_table',
            },
            bases=('customadmin.baseuser',),
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=254)),
                ('amount', models.FloatField()),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('disputed', 'Disputed')], default='pending', help_text='The status of the payment.', max_length=20)),
                ('payment_method', models.CharField(choices=[('card', 'Card'), ('upi', 'UPI'), ('wallet', 'Wallet'), ('bank_transfer', 'Bank Transfer'), ('other', 'Other')], default='card', help_text='Method used for payment.', max_length=50)),
                ('currency', models.CharField(default='INR', help_text='Currency code (INR, USD, etc.)', max_length=3)),
                ('provider_order_id', models.CharField(default=0, max_length=40)),
                ('payment_id', models.CharField(default=0, max_length=36)),
                ('signature_id', models.CharField(default=0, max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when payment was initiated.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when payment details were last updated.')),
                ('processed_at', models.DateTimeField(blank=True, help_text='Timestamp when the payment was processed successfully.', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FAQs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('heading', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faq_s', to='customadmin.faqheading')),
            ],
        ),
        migrations.AddField(
            model_name='baseuser',
            name='plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customadmin.plan'),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
